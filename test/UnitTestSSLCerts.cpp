#include "UnitTestSSLCerts.h"

namespace mg {
namespace unittests {

	// The SSL credentials are valid until 2121 year.
	//
	// Generation commands:
	//
	// 1) Generate the key using EC encryption, the 'name' value is not very important -
	//  choose any valid one:
	//
	//    openssl ecparam -out key.pem -name prime256v1 -genkey
	//
	// 2) Generate a certificate based on the key (valid for 100 years):
	//
	//    openssl req -new -key key.pem -x509 -nodes -days 36500 -out cert.pem
	//
	// 3) Convert the key and certificate to DER format:
	//
	//    openssl x509 -inform pem -in cert.pem -outform der -out cert.der
	//    openssl ec -inform pem -in key.pem -outform der -out key.der
	//
	// 4) Dump DER files as C-style byte arrays and copy-paste them here:
	//
	//    xxd -i key.der
	//    xxd -i cert.der
	//
	const uint32_t theUnitTestCert1Size = 477;
	const uint8_t theUnitTestCert1[] = {
		0x30, 0x82, 0x01, 0xd9, 0x30, 0x82, 0x01, 0x7f, 0xa0, 0x03, 0x02, 0x01,
		0x02, 0x02, 0x14, 0x37, 0x9a, 0x8d, 0x42, 0xa7, 0xf7, 0xf8, 0x58, 0xcb,
		0x4f, 0x1a, 0x8c, 0x9e, 0x42, 0xb3, 0x99, 0xa2, 0x5e, 0xff, 0x44, 0x30,
		0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x30,
		0x41, 0x31, 0x0b, 0x30, 0x09, 0x06, 0x03, 0x55, 0x04, 0x06, 0x13, 0x02,
		0x52, 0x55, 0x31, 0x0f, 0x30, 0x0d, 0x06, 0x03, 0x55, 0x04, 0x08, 0x0c,
		0x06, 0x4d, 0x6f, 0x73, 0x63, 0x6f, 0x77, 0x31, 0x0f, 0x30, 0x0d, 0x06,
		0x03, 0x55, 0x04, 0x07, 0x0c, 0x06, 0x4d, 0x6f, 0x73, 0x63, 0x6f, 0x77,
		0x31, 0x10, 0x30, 0x0e, 0x06, 0x03, 0x55, 0x04, 0x0a, 0x0c, 0x07, 0x55,
		0x62, 0x69, 0x73, 0x6f, 0x66, 0x74, 0x30, 0x20, 0x17, 0x0d, 0x32, 0x31,
		0x30, 0x33, 0x31, 0x32, 0x31, 0x38, 0x30, 0x37, 0x34, 0x35, 0x5a, 0x18,
		0x0f, 0x32, 0x31, 0x32, 0x31, 0x30, 0x32, 0x31, 0x36, 0x31, 0x38, 0x30,
		0x37, 0x34, 0x35, 0x5a, 0x30, 0x41, 0x31, 0x0b, 0x30, 0x09, 0x06, 0x03,
		0x55, 0x04, 0x06, 0x13, 0x02, 0x52, 0x55, 0x31, 0x0f, 0x30, 0x0d, 0x06,
		0x03, 0x55, 0x04, 0x08, 0x0c, 0x06, 0x4d, 0x6f, 0x73, 0x63, 0x6f, 0x77,
		0x31, 0x0f, 0x30, 0x0d, 0x06, 0x03, 0x55, 0x04, 0x07, 0x0c, 0x06, 0x4d,
		0x6f, 0x73, 0x63, 0x6f, 0x77, 0x31, 0x10, 0x30, 0x0e, 0x06, 0x03, 0x55,
		0x04, 0x0a, 0x0c, 0x07, 0x55, 0x62, 0x69, 0x73, 0x6f, 0x66, 0x74, 0x30,
		0x59, 0x30, 0x13, 0x06, 0x07, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x02, 0x01,
		0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x03, 0x01, 0x07, 0x03, 0x42,
		0x00, 0x04, 0x98, 0x8a, 0x66, 0xfb, 0x5a, 0x00, 0x85, 0xf8, 0x89, 0xc3,
		0xad, 0xc3, 0x92, 0xce, 0xbb, 0x69, 0x50, 0x3f, 0x7f, 0xb2, 0x25, 0x61,
		0x32, 0xd2, 0x0b, 0xf0, 0x78, 0x76, 0xde, 0x99, 0xb0, 0x04, 0x43, 0x56,
		0x4a, 0x90, 0x85, 0xef, 0x21, 0x95, 0xd3, 0x23, 0xe0, 0x63, 0xb8, 0x09,
		0x4a, 0x5b, 0x90, 0x4d, 0x75, 0xef, 0xf9, 0xc0, 0x13, 0xcb, 0xbe, 0x58,
		0xe6, 0x1b, 0xa1, 0xf3, 0x60, 0x2a, 0xa3, 0x53, 0x30, 0x51, 0x30, 0x1d,
		0x06, 0x03, 0x55, 0x1d, 0x0e, 0x04, 0x16, 0x04, 0x14, 0xc2, 0x94, 0x84,
		0x2b, 0x06, 0x99, 0x06, 0x7f, 0xa3, 0x95, 0x9d, 0x30, 0x15, 0xc3, 0x98,
		0x0f, 0x60, 0xb1, 0xe8, 0xc5, 0x30, 0x1f, 0x06, 0x03, 0x55, 0x1d, 0x23,
		0x04, 0x18, 0x30, 0x16, 0x80, 0x14, 0xc2, 0x94, 0x84, 0x2b, 0x06, 0x99,
		0x06, 0x7f, 0xa3, 0x95, 0x9d, 0x30, 0x15, 0xc3, 0x98, 0x0f, 0x60, 0xb1,
		0xe8, 0xc5, 0x30, 0x0f, 0x06, 0x03, 0x55, 0x1d, 0x13, 0x01, 0x01, 0xff,
		0x04, 0x05, 0x30, 0x03, 0x01, 0x01, 0xff, 0x30, 0x0a, 0x06, 0x08, 0x2a,
		0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x03, 0x48, 0x00, 0x30, 0x45,
		0x02, 0x20, 0x12, 0x5d, 0xc9, 0x22, 0xea, 0x2a, 0x5e, 0x6b, 0x7d, 0x04,
		0xf9, 0xd2, 0xf8, 0xbc, 0x86, 0x12, 0x8b, 0xd4, 0x13, 0xe9, 0x73, 0x8a,
		0x62, 0x65, 0xeb, 0x57, 0x15, 0x2a, 0xe8, 0x23, 0xbb, 0x40, 0x02, 0x21,
		0x00, 0xde, 0x76, 0x2e, 0x85, 0xed, 0xc8, 0x46, 0x6c, 0x28, 0xb0, 0x64,
		0x14, 0x64, 0x7f, 0x6c, 0x5b, 0x09, 0x62, 0x1f, 0x35, 0xb1, 0x20, 0x23,
		0xc9, 0xa3, 0x07, 0x1b, 0x5b, 0xbb, 0x99, 0x79, 0xf6
	};

	const uint32_t theUnitTestKey1Size = 121;
	const uint8_t theUnitTestKey1[] = {
		0x30, 0x77, 0x02, 0x01, 0x01, 0x04, 0x20, 0x6e, 0x82, 0xd2, 0x38, 0x06,
		0x98, 0x67, 0x53, 0x83, 0x4c, 0x46, 0x81, 0xb2, 0x09, 0x50, 0xe0, 0x00,
		0xc6, 0x53, 0x2b, 0xa1, 0xf6, 0x30, 0xb2, 0x82, 0xc8, 0xae, 0x4b, 0x5e,
		0x6e, 0x4d, 0xad, 0xa0, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d,
		0x03, 0x01, 0x07, 0xa1, 0x44, 0x03, 0x42, 0x00, 0x04, 0x98, 0x8a, 0x66,
		0xfb, 0x5a, 0x00, 0x85, 0xf8, 0x89, 0xc3, 0xad, 0xc3, 0x92, 0xce, 0xbb,
		0x69, 0x50, 0x3f, 0x7f, 0xb2, 0x25, 0x61, 0x32, 0xd2, 0x0b, 0xf0, 0x78,
		0x76, 0xde, 0x99, 0xb0, 0x04, 0x43, 0x56, 0x4a, 0x90, 0x85, 0xef, 0x21,
		0x95, 0xd3, 0x23, 0xe0, 0x63, 0xb8, 0x09, 0x4a, 0x5b, 0x90, 0x4d, 0x75,
		0xef, 0xf9, 0xc0, 0x13, 0xcb, 0xbe, 0x58, 0xe6, 0x1b, 0xa1, 0xf3, 0x60,
		0x2a
	};

	const uint32_t theUnitTestCert2Size = 477;
	const uint8_t theUnitTestCert2[] = {
		0x30, 0x82, 0x01, 0xd9, 0x30, 0x82, 0x01, 0x7f, 0xa0, 0x03, 0x02, 0x01,
		0x02, 0x02, 0x14, 0x17, 0x8d, 0x21, 0xe7, 0x20, 0xda, 0x67, 0x8b, 0x67,
		0x62, 0xa9, 0x04, 0x93, 0x75, 0xc0, 0x4b, 0x6c, 0x56, 0xba, 0x1c, 0x30,
		0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x30,
		0x41, 0x31, 0x0b, 0x30, 0x09, 0x06, 0x03, 0x55, 0x04, 0x06, 0x13, 0x02,
		0x52, 0x55, 0x31, 0x0f, 0x30, 0x0d, 0x06, 0x03, 0x55, 0x04, 0x08, 0x0c,
		0x06, 0x4d, 0x6f, 0x73, 0x63, 0x6f, 0x77, 0x31, 0x0f, 0x30, 0x0d, 0x06,
		0x03, 0x55, 0x04, 0x07, 0x0c, 0x06, 0x4d, 0x6f, 0x73, 0x63, 0x6f, 0x77,
		0x31, 0x10, 0x30, 0x0e, 0x06, 0x03, 0x55, 0x04, 0x0a, 0x0c, 0x07, 0x55,
		0x62, 0x69, 0x73, 0x6f, 0x66, 0x74, 0x30, 0x20, 0x17, 0x0d, 0x32, 0x31,
		0x31, 0x30, 0x30, 0x38, 0x31, 0x36, 0x34, 0x39, 0x35, 0x34, 0x5a, 0x18,
		0x0f, 0x32, 0x31, 0x32, 0x31, 0x30, 0x39, 0x31, 0x34, 0x31, 0x36, 0x34,
		0x39, 0x35, 0x34, 0x5a, 0x30, 0x41, 0x31, 0x0b, 0x30, 0x09, 0x06, 0x03,
		0x55, 0x04, 0x06, 0x13, 0x02, 0x52, 0x55, 0x31, 0x0f, 0x30, 0x0d, 0x06,
		0x03, 0x55, 0x04, 0x08, 0x0c, 0x06, 0x4d, 0x6f, 0x73, 0x63, 0x6f, 0x77,
		0x31, 0x0f, 0x30, 0x0d, 0x06, 0x03, 0x55, 0x04, 0x07, 0x0c, 0x06, 0x4d,
		0x6f, 0x73, 0x63, 0x6f, 0x77, 0x31, 0x10, 0x30, 0x0e, 0x06, 0x03, 0x55,
		0x04, 0x0a, 0x0c, 0x07, 0x55, 0x62, 0x69, 0x73, 0x6f, 0x66, 0x74, 0x30,
		0x59, 0x30, 0x13, 0x06, 0x07, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x02, 0x01,
		0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x03, 0x01, 0x07, 0x03, 0x42,
		0x00, 0x04, 0x70, 0x1e, 0xd4, 0xdd, 0x86, 0xe5, 0xc5, 0x45, 0xfa, 0xc7,
		0x92, 0x75, 0xb5, 0xa0, 0x9f, 0x1e, 0x60, 0x63, 0x25, 0x55, 0xfc, 0xf4,
		0x1f, 0xd7, 0x04, 0x11, 0x60, 0xf2, 0xc4, 0x77, 0x28, 0xc0, 0xcb, 0x0e,
		0x32, 0xf7, 0xba, 0x1d, 0x39, 0x83, 0xb2, 0xa4, 0x41, 0x05, 0x65, 0xb7,
		0xbf, 0xd4, 0x8f, 0x21, 0x2a, 0xea, 0x32, 0x92, 0xfc, 0x62, 0xde, 0x72,
		0x2b, 0xf7, 0x9e, 0x3a, 0xb5, 0xd9, 0xa3, 0x53, 0x30, 0x51, 0x30, 0x1d,
		0x06, 0x03, 0x55, 0x1d, 0x0e, 0x04, 0x16, 0x04, 0x14, 0x70, 0xa6, 0x46,
		0x56, 0xf7, 0x19, 0x8d, 0xd8, 0x73, 0xb5, 0x50, 0xb7, 0x05, 0xee, 0xd7,
		0xcc, 0x9c, 0xf9, 0xdf, 0x9a, 0x30, 0x1f, 0x06, 0x03, 0x55, 0x1d, 0x23,
		0x04, 0x18, 0x30, 0x16, 0x80, 0x14, 0x70, 0xa6, 0x46, 0x56, 0xf7, 0x19,
		0x8d, 0xd8, 0x73, 0xb5, 0x50, 0xb7, 0x05, 0xee, 0xd7, 0xcc, 0x9c, 0xf9,
		0xdf, 0x9a, 0x30, 0x0f, 0x06, 0x03, 0x55, 0x1d, 0x13, 0x01, 0x01, 0xff,
		0x04, 0x05, 0x30, 0x03, 0x01, 0x01, 0xff, 0x30, 0x0a, 0x06, 0x08, 0x2a,
		0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x03, 0x48, 0x00, 0x30, 0x45,
		0x02, 0x21, 0x00, 0x86, 0x25, 0xbc, 0x2d, 0x73, 0xae, 0x40, 0xbc, 0x37,
		0x19, 0x54, 0xf2, 0x92, 0xb4, 0x80, 0xd5, 0x45, 0xb3, 0x46, 0x04, 0xa7,
		0x8d, 0xeb, 0x00, 0x73, 0x42, 0x97, 0xd8, 0xc5, 0x14, 0x4e, 0x72, 0x02,
		0x20, 0x6b, 0x26, 0x94, 0xb3, 0x09, 0x5e, 0x4a, 0x65, 0x2f, 0x3e, 0x1d,
		0x27, 0xbb, 0x7d, 0x67, 0xc2, 0xae, 0x50, 0x59, 0x4d, 0xbe, 0xcf, 0x8a,
		0x56, 0xca, 0xcd, 0x02, 0x5e, 0x52, 0xef, 0x01, 0xcc
	};

	const uint32_t theUnitTestKey2Size = 121;
	const uint8_t theUnitTestKey2[] = {
		0x30, 0x77, 0x02, 0x01, 0x01, 0x04, 0x20, 0x89, 0x5f, 0x3f, 0x76, 0x7e,
		0x0b, 0x04, 0xd7, 0x87, 0x7a, 0x08, 0x92, 0xe0, 0xe5, 0x6f, 0x03, 0x8d,
		0x97, 0x68, 0xbf, 0xd2, 0xef, 0x40, 0xb2, 0x97, 0x61, 0x0f, 0x60, 0x66,
		0x30, 0x79, 0x14, 0xa0, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d,
		0x03, 0x01, 0x07, 0xa1, 0x44, 0x03, 0x42, 0x00, 0x04, 0x70, 0x1e, 0xd4,
		0xdd, 0x86, 0xe5, 0xc5, 0x45, 0xfa, 0xc7, 0x92, 0x75, 0xb5, 0xa0, 0x9f,
		0x1e, 0x60, 0x63, 0x25, 0x55, 0xfc, 0xf4, 0x1f, 0xd7, 0x04, 0x11, 0x60,
		0xf2, 0xc4, 0x77, 0x28, 0xc0, 0xcb, 0x0e, 0x32, 0xf7, 0xba, 0x1d, 0x39,
		0x83, 0xb2, 0xa4, 0x41, 0x05, 0x65, 0xb7, 0xbf, 0xd4, 0x8f, 0x21, 0x2a,
		0xea, 0x32, 0x92, 0xfc, 0x62, 0xde, 0x72, 0x2b, 0xf7, 0x9e, 0x3a, 0xb5,
		0xd9
	};

	// These certificates are signed with a CA, not by themselves.
	//
	// Generation commands:
	//
	// 1) Generate local key of CA. Meaning of the arguments is the same as for
	//  self-signed cert.
	//
	//    openssl ecparam -out ca.key -name prime256v1 -genkey
	//
	// 2) Generate CA public cert. Be sure you specify a unique 'Common Name' field when
	//  prompted by the command line.
	//
	//    openssl req -x509 -new -nodes -key ca.key -sha256 -days 36500 -out ca.crt
	//
	// 3) Generate server's own private key:
	//
	//    openssl ecparam -out dom.key -name prime256v1 -genkey
	//
	// 4) Generate CSRs (request to create a cert for the server). Here 3 are generated to
	//  give our server 3 public certificates. It is useful for testing their switch. Be
	//  sure you specify a unique 'Common Name' field for each CSR when prompted by the
	//  command line.
	//
	//    openssl req -new -key dom.key -out dom.csr1
	//    openssl req -new -key dom.key -out dom.csr2
	//    openssl req -new -key dom.key -out dom.csr3
	//
	// 5) Generate server's public certificates by the CA key and the CSRs.
	//
	//    openssl x509 -req -in dom.csr1 -CA ca.crt -CAkey ca.key -CAcreateserial -out dom.crt1 -days 36500 -sha256
	//    openssl x509 -req -in dom.csr2 -CA ca.crt -CAkey ca.key -CAcreateserial -out dom.crt2 -days 36500 -sha256
	//
	//  The third certificate is supposed to be expired. There is no a simple way to
	//  generate an already expired cert. But it can be done with a hack using 'faketime'
	//  command (to be installed using 'sudo apt install faketime').
	//
	//    faketime 2022-01-01 openssl x509 -req -in dom.csr3 -CA ca.crt -CAkey ca.key -CAcreateserial -out dom.crt3 -days 7 -sha256
	//
	// 6) Create DER versions of these files:
	//
	//    openssl x509 -inform pem -in dom.crt1 -outform der -out dom.crt.der1
	//    openssl x509 -inform pem -in dom.crt2 -outform der -out dom.crt.der2
	//    openssl x509 -inform pem -in dom.crt3 -outform der -out dom.crt.der3
	//    openssl x509 -inform pem -in ca.crt -outform der -out ca.crt.der
	//    openssl ec -inform pem -in dom.key -outform der -out dom.key.der
	//
	// 7) Print ready-to-use arrays of bytes. The CA cert is also saved in PEM format
	//  because at the moment of writing this the serverbox API didn't allow to add CA as
	//  trusted root certificate in DER format.
	//
	//    xxd -i dom.crt.der1
	//    xxd -i dom.crt.der2
	//    xxd -i dom.crt.der3
	//    xxd -i dom.key.der
	//    xxd -i ca.crt.der
	//    xxd -i ca.crt
	//
	const uint32_t theUnitTestCert31Size = 429;
	const uint8_t theUnitTestCert31[] = {
		0x30, 0x82, 0x01, 0xa9, 0x30, 0x82, 0x01, 0x4f, 0x02, 0x14, 0x53, 0x53,
		0x89, 0x2d, 0x22, 0x6f, 0xaf, 0xe4, 0x1c, 0x1a, 0x00, 0xb4, 0x08, 0x6c,
		0xf2, 0x24, 0x58, 0xbf, 0x2e, 0x93, 0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86,
		0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x30, 0x53, 0x31, 0x0b, 0x30, 0x09,
		0x06, 0x03, 0x55, 0x04, 0x06, 0x13, 0x02, 0x52, 0x55, 0x31, 0x0f, 0x30,
		0x0d, 0x06, 0x03, 0x55, 0x04, 0x08, 0x0c, 0x06, 0x4d, 0x6f, 0x73, 0x63,
		0x6f, 0x77, 0x31, 0x0f, 0x30, 0x0d, 0x06, 0x03, 0x55, 0x04, 0x07, 0x0c,
		0x06, 0x4d, 0x6f, 0x73, 0x63, 0x6f, 0x77, 0x31, 0x10, 0x30, 0x0e, 0x06,
		0x03, 0x55, 0x04, 0x0a, 0x0c, 0x07, 0x55, 0x62, 0x69, 0x73, 0x6f, 0x66,
		0x74, 0x31, 0x10, 0x30, 0x0e, 0x06, 0x03, 0x55, 0x04, 0x03, 0x0c, 0x07,
		0x55, 0x62, 0x69, 0x73, 0x6f, 0x66, 0x74, 0x30, 0x20, 0x17, 0x0d, 0x32,
		0x32, 0x30, 0x36, 0x32, 0x32, 0x31, 0x34, 0x30, 0x33, 0x30, 0x35, 0x5a,
		0x18, 0x0f, 0x32, 0x31, 0x32, 0x32, 0x30, 0x35, 0x32, 0x39, 0x31, 0x34,
		0x30, 0x33, 0x30, 0x35, 0x5a, 0x30, 0x59, 0x31, 0x0b, 0x30, 0x09, 0x06,
		0x03, 0x55, 0x04, 0x06, 0x13, 0x02, 0x41, 0x55, 0x31, 0x13, 0x30, 0x11,
		0x06, 0x03, 0x55, 0x04, 0x08, 0x0c, 0x0a, 0x53, 0x6f, 0x6d, 0x65, 0x2d,
		0x53, 0x74, 0x61, 0x74, 0x65, 0x31, 0x21, 0x30, 0x1f, 0x06, 0x03, 0x55,
		0x04, 0x0a, 0x0c, 0x18, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x65, 0x74,
		0x20, 0x57, 0x69, 0x64, 0x67, 0x69, 0x74, 0x73, 0x20, 0x50, 0x74, 0x79,
		0x20, 0x4c, 0x74, 0x64, 0x31, 0x12, 0x30, 0x10, 0x06, 0x03, 0x55, 0x04,
		0x03, 0x0c, 0x09, 0x55, 0x62, 0x69, 0x73, 0x6f, 0x66, 0x74, 0x20, 0x31,
		0x30, 0x59, 0x30, 0x13, 0x06, 0x07, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x02,
		0x01, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x03, 0x01, 0x07, 0x03,
		0x42, 0x00, 0x04, 0xde, 0x5a, 0x0e, 0x8e, 0x07, 0xdd, 0xe2, 0x85, 0xe5,
		0x04, 0x73, 0xfb, 0x74, 0x77, 0x83, 0xc6, 0xae, 0x9f, 0xf0, 0xa1, 0xf0,
		0xe6, 0xe2, 0xf1, 0xf8, 0x8e, 0x45, 0x19, 0xe5, 0x58, 0x78, 0x90, 0xf5,
		0x16, 0xeb, 0x99, 0x33, 0xe7, 0xff, 0xdf, 0x4e, 0x0f, 0xb7, 0x7b, 0xf8,
		0x25, 0x88, 0x79, 0xa5, 0xc9, 0xe5, 0x82, 0x83, 0x9d, 0xa3, 0x37, 0x56,
		0x59, 0x56, 0xbf, 0xd3, 0x41, 0x2a, 0xe8, 0x30, 0x0a, 0x06, 0x08, 0x2a,
		0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x03, 0x48, 0x00, 0x30, 0x45,
		0x02, 0x20, 0x0e, 0xae, 0x29, 0x05, 0x03, 0x80, 0x07, 0x8f, 0x2c, 0x84,
		0x7f, 0x1c, 0xeb, 0xab, 0x5c, 0xd0, 0x74, 0x62, 0xb5, 0x87, 0x57, 0x24,
		0xcc, 0x7b, 0x25, 0xa0, 0x77, 0x09, 0xb9, 0x2f, 0x77, 0x13, 0x02, 0x21,
		0x00, 0xe1, 0x46, 0x88, 0x24, 0xcc, 0x79, 0xed, 0x5a, 0x18, 0x32, 0xac,
		0xe4, 0x55, 0x28, 0xc4, 0x94, 0xc9, 0xd4, 0xa0, 0xcb, 0xb3, 0x01, 0xfa,
		0x18, 0xe0, 0x69, 0xe6, 0x2c, 0x23, 0xbb, 0x10, 0xf4
	};

	const uint32_t theUnitTestCert32Size = 430;
	const uint8_t theUnitTestCert32[] = {
		0x30, 0x82, 0x01, 0xaa, 0x30, 0x82, 0x01, 0x4f, 0x02, 0x14, 0x53, 0x53,
		0x89, 0x2d, 0x22, 0x6f, 0xaf, 0xe4, 0x1c, 0x1a, 0x00, 0xb4, 0x08, 0x6c,
		0xf2, 0x24, 0x58, 0xbf, 0x2e, 0x94, 0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86,
		0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x30, 0x53, 0x31, 0x0b, 0x30, 0x09,
		0x06, 0x03, 0x55, 0x04, 0x06, 0x13, 0x02, 0x52, 0x55, 0x31, 0x0f, 0x30,
		0x0d, 0x06, 0x03, 0x55, 0x04, 0x08, 0x0c, 0x06, 0x4d, 0x6f, 0x73, 0x63,
		0x6f, 0x77, 0x31, 0x0f, 0x30, 0x0d, 0x06, 0x03, 0x55, 0x04, 0x07, 0x0c,
		0x06, 0x4d, 0x6f, 0x73, 0x63, 0x6f, 0x77, 0x31, 0x10, 0x30, 0x0e, 0x06,
		0x03, 0x55, 0x04, 0x0a, 0x0c, 0x07, 0x55, 0x62, 0x69, 0x73, 0x6f, 0x66,
		0x74, 0x31, 0x10, 0x30, 0x0e, 0x06, 0x03, 0x55, 0x04, 0x03, 0x0c, 0x07,
		0x55, 0x62, 0x69, 0x73, 0x6f, 0x66, 0x74, 0x30, 0x20, 0x17, 0x0d, 0x32,
		0x32, 0x30, 0x36, 0x32, 0x32, 0x31, 0x34, 0x30, 0x33, 0x30, 0x39, 0x5a,
		0x18, 0x0f, 0x32, 0x31, 0x32, 0x32, 0x30, 0x35, 0x32, 0x39, 0x31, 0x34,
		0x30, 0x33, 0x30, 0x39, 0x5a, 0x30, 0x59, 0x31, 0x0b, 0x30, 0x09, 0x06,
		0x03, 0x55, 0x04, 0x06, 0x13, 0x02, 0x41, 0x55, 0x31, 0x13, 0x30, 0x11,
		0x06, 0x03, 0x55, 0x04, 0x08, 0x0c, 0x0a, 0x53, 0x6f, 0x6d, 0x65, 0x2d,
		0x53, 0x74, 0x61, 0x74, 0x65, 0x31, 0x21, 0x30, 0x1f, 0x06, 0x03, 0x55,
		0x04, 0x0a, 0x0c, 0x18, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x65, 0x74,
		0x20, 0x57, 0x69, 0x64, 0x67, 0x69, 0x74, 0x73, 0x20, 0x50, 0x74, 0x79,
		0x20, 0x4c, 0x74, 0x64, 0x31, 0x12, 0x30, 0x10, 0x06, 0x03, 0x55, 0x04,
		0x03, 0x0c, 0x09, 0x55, 0x62, 0x69, 0x73, 0x6f, 0x66, 0x74, 0x20, 0x32,
		0x30, 0x59, 0x30, 0x13, 0x06, 0x07, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x02,
		0x01, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x03, 0x01, 0x07, 0x03,
		0x42, 0x00, 0x04, 0xde, 0x5a, 0x0e, 0x8e, 0x07, 0xdd, 0xe2, 0x85, 0xe5,
		0x04, 0x73, 0xfb, 0x74, 0x77, 0x83, 0xc6, 0xae, 0x9f, 0xf0, 0xa1, 0xf0,
		0xe6, 0xe2, 0xf1, 0xf8, 0x8e, 0x45, 0x19, 0xe5, 0x58, 0x78, 0x90, 0xf5,
		0x16, 0xeb, 0x99, 0x33, 0xe7, 0xff, 0xdf, 0x4e, 0x0f, 0xb7, 0x7b, 0xf8,
		0x25, 0x88, 0x79, 0xa5, 0xc9, 0xe5, 0x82, 0x83, 0x9d, 0xa3, 0x37, 0x56,
		0x59, 0x56, 0xbf, 0xd3, 0x41, 0x2a, 0xe8, 0x30, 0x0a, 0x06, 0x08, 0x2a,
		0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x03, 0x49, 0x00, 0x30, 0x46,
		0x02, 0x21, 0x00, 0xef, 0xeb, 0x4b, 0xb8, 0x00, 0x8b, 0xc7, 0x62, 0xa7,
		0xb9, 0x20, 0xa4, 0x05, 0xe4, 0xa3, 0x3c, 0xa6, 0xfd, 0xd0, 0x85, 0xf9,
		0x01, 0x54, 0x04, 0xa1, 0x73, 0xa0, 0x8a, 0x3d, 0x93, 0x01, 0x85, 0x02,
		0x21, 0x00, 0x93, 0xef, 0x08, 0xc0, 0x5e, 0xd0, 0x36, 0xc4, 0x4b, 0x75,
		0x77, 0x95, 0xfd, 0xa5, 0x7c, 0x8e, 0x24, 0xfd, 0x24, 0x2f, 0x51, 0x60,
		0x20, 0xe3, 0x44, 0x35, 0x6e, 0x33, 0x6c, 0x13, 0x54, 0x9b
	};

	const uint32_t theUnitTestCert33ExpiredSize = 428;
	const uint8_t theUnitTestCert33Expired[] = {
		0x30, 0x82, 0x01, 0xa8, 0x30, 0x82, 0x01, 0x4d, 0x02, 0x14, 0x53, 0x53,
		0x89, 0x2d, 0x22, 0x6f, 0xaf, 0xe4, 0x1c, 0x1a, 0x00, 0xb4, 0x08, 0x6c,
		0xf2, 0x24, 0x58, 0xbf, 0x2e, 0x95, 0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86,
		0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x30, 0x53, 0x31, 0x0b, 0x30, 0x09,
		0x06, 0x03, 0x55, 0x04, 0x06, 0x13, 0x02, 0x52, 0x55, 0x31, 0x0f, 0x30,
		0x0d, 0x06, 0x03, 0x55, 0x04, 0x08, 0x0c, 0x06, 0x4d, 0x6f, 0x73, 0x63,
		0x6f, 0x77, 0x31, 0x0f, 0x30, 0x0d, 0x06, 0x03, 0x55, 0x04, 0x07, 0x0c,
		0x06, 0x4d, 0x6f, 0x73, 0x63, 0x6f, 0x77, 0x31, 0x10, 0x30, 0x0e, 0x06,
		0x03, 0x55, 0x04, 0x0a, 0x0c, 0x07, 0x55, 0x62, 0x69, 0x73, 0x6f, 0x66,
		0x74, 0x31, 0x10, 0x30, 0x0e, 0x06, 0x03, 0x55, 0x04, 0x03, 0x0c, 0x07,
		0x55, 0x62, 0x69, 0x73, 0x6f, 0x66, 0x74, 0x30, 0x1e, 0x17, 0x0d, 0x32,
		0x31, 0x31, 0x32, 0x33, 0x31, 0x32, 0x33, 0x30, 0x30, 0x30, 0x30, 0x5a,
		0x17, 0x0d, 0x32, 0x32, 0x30, 0x31, 0x30, 0x37, 0x32, 0x33, 0x30, 0x30,
		0x30, 0x30, 0x5a, 0x30, 0x59, 0x31, 0x0b, 0x30, 0x09, 0x06, 0x03, 0x55,
		0x04, 0x06, 0x13, 0x02, 0x41, 0x55, 0x31, 0x13, 0x30, 0x11, 0x06, 0x03,
		0x55, 0x04, 0x08, 0x0c, 0x0a, 0x53, 0x6f, 0x6d, 0x65, 0x2d, 0x53, 0x74,
		0x61, 0x74, 0x65, 0x31, 0x21, 0x30, 0x1f, 0x06, 0x03, 0x55, 0x04, 0x0a,
		0x0c, 0x18, 0x49, 0x6e, 0x74, 0x65, 0x72, 0x6e, 0x65, 0x74, 0x20, 0x57,
		0x69, 0x64, 0x67, 0x69, 0x74, 0x73, 0x20, 0x50, 0x74, 0x79, 0x20, 0x4c,
		0x74, 0x64, 0x31, 0x12, 0x30, 0x10, 0x06, 0x03, 0x55, 0x04, 0x03, 0x0c,
		0x09, 0x55, 0x62, 0x69, 0x73, 0x6f, 0x66, 0x74, 0x20, 0x33, 0x30, 0x59,
		0x30, 0x13, 0x06, 0x07, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x02, 0x01, 0x06,
		0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x03, 0x01, 0x07, 0x03, 0x42, 0x00,
		0x04, 0xde, 0x5a, 0x0e, 0x8e, 0x07, 0xdd, 0xe2, 0x85, 0xe5, 0x04, 0x73,
		0xfb, 0x74, 0x77, 0x83, 0xc6, 0xae, 0x9f, 0xf0, 0xa1, 0xf0, 0xe6, 0xe2,
		0xf1, 0xf8, 0x8e, 0x45, 0x19, 0xe5, 0x58, 0x78, 0x90, 0xf5, 0x16, 0xeb,
		0x99, 0x33, 0xe7, 0xff, 0xdf, 0x4e, 0x0f, 0xb7, 0x7b, 0xf8, 0x25, 0x88,
		0x79, 0xa5, 0xc9, 0xe5, 0x82, 0x83, 0x9d, 0xa3, 0x37, 0x56, 0x59, 0x56,
		0xbf, 0xd3, 0x41, 0x2a, 0xe8, 0x30, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48,
		0xce, 0x3d, 0x04, 0x03, 0x02, 0x03, 0x49, 0x00, 0x30, 0x46, 0x02, 0x21,
		0x00, 0xe5, 0xa8, 0x0e, 0x4e, 0x40, 0xfb, 0xd1, 0xa8, 0x87, 0x99, 0x15,
		0x86, 0x07, 0xf4, 0x59, 0x43, 0x58, 0x90, 0xb0, 0x25, 0x67, 0x04, 0x79,
		0x4c, 0x5d, 0xfa, 0x4b, 0xaf, 0x7f, 0x60, 0xe5, 0x3b, 0x02, 0x21, 0x00,
		0xfe, 0xa6, 0x4e, 0x7c, 0xe8, 0xf4, 0xf2, 0xf5, 0x5e, 0xb4, 0xcb, 0x58,
		0x4e, 0x44, 0x6f, 0x57, 0x2f, 0xcf, 0xc6, 0xc8, 0x7f, 0x17, 0xc8, 0xa3,
		0xfe, 0xe0, 0x1a, 0x9d, 0x3f, 0xd1, 0xb4, 0x04
	};

	const uint32_t theUnitTestKey3Size = 121;
	const uint8_t theUnitTestKey3[] = {
		0x30, 0x77, 0x02, 0x01, 0x01, 0x04, 0x20, 0x65, 0x01, 0x04, 0xcc, 0x6b,
		0x27, 0xb4, 0x85, 0x3d, 0x38, 0x78, 0xd7, 0x3a, 0x5a, 0x12, 0x16, 0xdd,
		0xe4, 0x8f, 0xa5, 0x82, 0x67, 0xba, 0x34, 0xf0, 0x32, 0x6f, 0xd4, 0x74,
		0x89, 0x83, 0x44, 0xa0, 0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d,
		0x03, 0x01, 0x07, 0xa1, 0x44, 0x03, 0x42, 0x00, 0x04, 0xde, 0x5a, 0x0e,
		0x8e, 0x07, 0xdd, 0xe2, 0x85, 0xe5, 0x04, 0x73, 0xfb, 0x74, 0x77, 0x83,
		0xc6, 0xae, 0x9f, 0xf0, 0xa1, 0xf0, 0xe6, 0xe2, 0xf1, 0xf8, 0x8e, 0x45,
		0x19, 0xe5, 0x58, 0x78, 0x90, 0xf5, 0x16, 0xeb, 0x99, 0x33, 0xe7, 0xff,
		0xdf, 0x4e, 0x0f, 0xb7, 0x7b, 0xf8, 0x25, 0x88, 0x79, 0xa5, 0xc9, 0xe5,
		0x82, 0x83, 0x9d, 0xa3, 0x37, 0x56, 0x59, 0x56, 0xbf, 0xd3, 0x41, 0x2a,
		0xe8
	};

	const uint32_t theUnitTestCACert3Size = 513;
	const uint8_t theUnitTestCACert3[] = {
		0x30, 0x82, 0x01, 0xfd, 0x30, 0x82, 0x01, 0xa3, 0xa0, 0x03, 0x02, 0x01,
		0x02, 0x02, 0x14, 0x33, 0x0d, 0xc7, 0xa8, 0xff, 0xc4, 0x48, 0x65, 0x67,
		0x97, 0x6f, 0x95, 0x98, 0xed, 0xe0, 0xa6, 0xf9, 0x99, 0x21, 0x24, 0x30,
		0x0a, 0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x30,
		0x53, 0x31, 0x0b, 0x30, 0x09, 0x06, 0x03, 0x55, 0x04, 0x06, 0x13, 0x02,
		0x52, 0x55, 0x31, 0x0f, 0x30, 0x0d, 0x06, 0x03, 0x55, 0x04, 0x08, 0x0c,
		0x06, 0x4d, 0x6f, 0x73, 0x63, 0x6f, 0x77, 0x31, 0x0f, 0x30, 0x0d, 0x06,
		0x03, 0x55, 0x04, 0x07, 0x0c, 0x06, 0x4d, 0x6f, 0x73, 0x63, 0x6f, 0x77,
		0x31, 0x10, 0x30, 0x0e, 0x06, 0x03, 0x55, 0x04, 0x0a, 0x0c, 0x07, 0x55,
		0x62, 0x69, 0x73, 0x6f, 0x66, 0x74, 0x31, 0x10, 0x30, 0x0e, 0x06, 0x03,
		0x55, 0x04, 0x03, 0x0c, 0x07, 0x55, 0x62, 0x69, 0x73, 0x6f, 0x66, 0x74,
		0x30, 0x20, 0x17, 0x0d, 0x32, 0x32, 0x30, 0x36, 0x32, 0x32, 0x31, 0x33,
		0x33, 0x39, 0x33, 0x33, 0x5a, 0x18, 0x0f, 0x32, 0x31, 0x32, 0x32, 0x30,
		0x35, 0x32, 0x39, 0x31, 0x33, 0x33, 0x39, 0x33, 0x33, 0x5a, 0x30, 0x53,
		0x31, 0x0b, 0x30, 0x09, 0x06, 0x03, 0x55, 0x04, 0x06, 0x13, 0x02, 0x52,
		0x55, 0x31, 0x0f, 0x30, 0x0d, 0x06, 0x03, 0x55, 0x04, 0x08, 0x0c, 0x06,
		0x4d, 0x6f, 0x73, 0x63, 0x6f, 0x77, 0x31, 0x0f, 0x30, 0x0d, 0x06, 0x03,
		0x55, 0x04, 0x07, 0x0c, 0x06, 0x4d, 0x6f, 0x73, 0x63, 0x6f, 0x77, 0x31,
		0x10, 0x30, 0x0e, 0x06, 0x03, 0x55, 0x04, 0x0a, 0x0c, 0x07, 0x55, 0x62,
		0x69, 0x73, 0x6f, 0x66, 0x74, 0x31, 0x10, 0x30, 0x0e, 0x06, 0x03, 0x55,
		0x04, 0x03, 0x0c, 0x07, 0x55, 0x62, 0x69, 0x73, 0x6f, 0x66, 0x74, 0x30,
		0x59, 0x30, 0x13, 0x06, 0x07, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x02, 0x01,
		0x06, 0x08, 0x2a, 0x86, 0x48, 0xce, 0x3d, 0x03, 0x01, 0x07, 0x03, 0x42,
		0x00, 0x04, 0x0b, 0x3d, 0x49, 0xbd, 0x61, 0xd9, 0xe9, 0xd6, 0xbd, 0x49,
		0xbb, 0xb5, 0x2c, 0xb7, 0x7e, 0x0a, 0x05, 0xb1, 0xfe, 0x89, 0xb3, 0x1a,
		0x0d, 0xbf, 0xf4, 0x44, 0x8e, 0x48, 0x6a, 0xa5, 0xa5, 0x26, 0xe5, 0x0b,
		0x10, 0xcd, 0x2c, 0x29, 0xde, 0xd8, 0xc6, 0x4b, 0x89, 0xdf, 0x6c, 0xab,
		0x8f, 0xb7, 0x87, 0xc4, 0xf8, 0xba, 0x31, 0x7c, 0xbb, 0x96, 0x42, 0x8c,
		0xf3, 0xb9, 0x62, 0x1c, 0xd4, 0x21, 0xa3, 0x53, 0x30, 0x51, 0x30, 0x1d,
		0x06, 0x03, 0x55, 0x1d, 0x0e, 0x04, 0x16, 0x04, 0x14, 0x64, 0xe3, 0x03,
		0x4e, 0x60, 0xc2, 0xd6, 0x3b, 0xff, 0x8f, 0x01, 0x0e, 0xc3, 0xe8, 0xeb,
		0xc7, 0xba, 0x88, 0x56, 0x66, 0x30, 0x1f, 0x06, 0x03, 0x55, 0x1d, 0x23,
		0x04, 0x18, 0x30, 0x16, 0x80, 0x14, 0x64, 0xe3, 0x03, 0x4e, 0x60, 0xc2,
		0xd6, 0x3b, 0xff, 0x8f, 0x01, 0x0e, 0xc3, 0xe8, 0xeb, 0xc7, 0xba, 0x88,
		0x56, 0x66, 0x30, 0x0f, 0x06, 0x03, 0x55, 0x1d, 0x13, 0x01, 0x01, 0xff,
		0x04, 0x05, 0x30, 0x03, 0x01, 0x01, 0xff, 0x30, 0x0a, 0x06, 0x08, 0x2a,
		0x86, 0x48, 0xce, 0x3d, 0x04, 0x03, 0x02, 0x03, 0x48, 0x00, 0x30, 0x45,
		0x02, 0x20, 0x69, 0xd0, 0x77, 0x50, 0x50, 0x6a, 0x3c, 0x49, 0x5b, 0x7e,
		0x09, 0x6c, 0x40, 0xf3, 0xa3, 0xdf, 0x27, 0x08, 0xbc, 0xa6, 0x2c, 0x14,
		0xa8, 0xca, 0xbb, 0x14, 0x78, 0xb7, 0xe6, 0x2d, 0x73, 0x33, 0x02, 0x21,
		0x00, 0x97, 0x40, 0x67, 0x7c, 0xd3, 0x76, 0x30, 0x3f, 0xa2, 0x05, 0xb7,
		0x7e, 0x72, 0xed, 0xa8, 0x9b, 0x8b, 0x00, 0x32, 0x61, 0x2f, 0xaf, 0x7b,
		0x6c, 0x5b, 0xa7, 0x17, 0x90, 0x69, 0xa9, 0x2a, 0x5c
	};

	const uint32_t theUnitTestCACert3PemSize = 749;
	const char theUnitTestCACert3Pem[] = {
		0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x42, 0x45, 0x47, 0x49, 0x4e, 0x20, 0x43,
		0x45, 0x52, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x45, 0x2d, 0x2d,
		0x2d, 0x2d, 0x2d, 0x0a, 0x4d, 0x49, 0x49, 0x42, 0x2f, 0x54, 0x43, 0x43,
		0x41, 0x61, 0x4f, 0x67, 0x41, 0x77, 0x49, 0x42, 0x41, 0x67, 0x49, 0x55,
		0x4d, 0x77, 0x33, 0x48, 0x71, 0x50, 0x2f, 0x45, 0x53, 0x47, 0x56, 0x6e,
		0x6c, 0x32, 0x2b, 0x56, 0x6d, 0x4f, 0x33, 0x67, 0x70, 0x76, 0x6d, 0x5a,
		0x49, 0x53, 0x51, 0x77, 0x43, 0x67, 0x59, 0x49, 0x4b, 0x6f, 0x5a, 0x49,
		0x7a, 0x6a, 0x30, 0x45, 0x41, 0x77, 0x49, 0x77, 0x0a, 0x55, 0x7a, 0x45,
		0x4c, 0x4d, 0x41, 0x6b, 0x47, 0x41, 0x31, 0x55, 0x45, 0x42, 0x68, 0x4d,
		0x43, 0x55, 0x6c, 0x55, 0x78, 0x44, 0x7a, 0x41, 0x4e, 0x42, 0x67, 0x4e,
		0x56, 0x42, 0x41, 0x67, 0x4d, 0x42, 0x6b, 0x31, 0x76, 0x63, 0x32, 0x4e,
		0x76, 0x64, 0x7a, 0x45, 0x50, 0x4d, 0x41, 0x30, 0x47, 0x41, 0x31, 0x55,
		0x45, 0x42, 0x77, 0x77, 0x47, 0x54, 0x57, 0x39, 0x7a, 0x59, 0x32, 0x39,
		0x33, 0x0a, 0x4d, 0x52, 0x41, 0x77, 0x44, 0x67, 0x59, 0x44, 0x56, 0x51,
		0x51, 0x4b, 0x44, 0x41, 0x64, 0x56, 0x59, 0x6d, 0x6c, 0x7a, 0x62, 0x32,
		0x5a, 0x30, 0x4d, 0x52, 0x41, 0x77, 0x44, 0x67, 0x59, 0x44, 0x56, 0x51,
		0x51, 0x44, 0x44, 0x41, 0x64, 0x56, 0x59, 0x6d, 0x6c, 0x7a, 0x62, 0x32,
		0x5a, 0x30, 0x4d, 0x43, 0x41, 0x58, 0x44, 0x54, 0x49, 0x79, 0x4d, 0x44,
		0x59, 0x79, 0x4d, 0x6a, 0x45, 0x7a, 0x0a, 0x4d, 0x7a, 0x6b, 0x7a, 0x4d,
		0x31, 0x6f, 0x59, 0x44, 0x7a, 0x49, 0x78, 0x4d, 0x6a, 0x49, 0x77, 0x4e,
		0x54, 0x49, 0x35, 0x4d, 0x54, 0x4d, 0x7a, 0x4f, 0x54, 0x4d, 0x7a, 0x57,
		0x6a, 0x42, 0x54, 0x4d, 0x51, 0x73, 0x77, 0x43, 0x51, 0x59, 0x44, 0x56,
		0x51, 0x51, 0x47, 0x45, 0x77, 0x4a, 0x53, 0x56, 0x54, 0x45, 0x50, 0x4d,
		0x41, 0x30, 0x47, 0x41, 0x31, 0x55, 0x45, 0x43, 0x41, 0x77, 0x47, 0x0a,
		0x54, 0x57, 0x39, 0x7a, 0x59, 0x32, 0x39, 0x33, 0x4d, 0x51, 0x38, 0x77,
		0x44, 0x51, 0x59, 0x44, 0x56, 0x51, 0x51, 0x48, 0x44, 0x41, 0x5a, 0x4e,
		0x62, 0x33, 0x4e, 0x6a, 0x62, 0x33, 0x63, 0x78, 0x45, 0x44, 0x41, 0x4f,
		0x42, 0x67, 0x4e, 0x56, 0x42, 0x41, 0x6f, 0x4d, 0x42, 0x31, 0x56, 0x69,
		0x61, 0x58, 0x4e, 0x76, 0x5a, 0x6e, 0x51, 0x78, 0x45, 0x44, 0x41, 0x4f,
		0x42, 0x67, 0x4e, 0x56, 0x0a, 0x42, 0x41, 0x4d, 0x4d, 0x42, 0x31, 0x56,
		0x69, 0x61, 0x58, 0x4e, 0x76, 0x5a, 0x6e, 0x51, 0x77, 0x57, 0x54, 0x41,
		0x54, 0x42, 0x67, 0x63, 0x71, 0x68, 0x6b, 0x6a, 0x4f, 0x50, 0x51, 0x49,
		0x42, 0x42, 0x67, 0x67, 0x71, 0x68, 0x6b, 0x6a, 0x4f, 0x50, 0x51, 0x4d,
		0x42, 0x42, 0x77, 0x4e, 0x43, 0x41, 0x41, 0x51, 0x4c, 0x50, 0x55, 0x6d,
		0x39, 0x59, 0x64, 0x6e, 0x70, 0x31, 0x72, 0x31, 0x4a, 0x0a, 0x75, 0x37,
		0x55, 0x73, 0x74, 0x33, 0x34, 0x4b, 0x42, 0x62, 0x48, 0x2b, 0x69, 0x62,
		0x4d, 0x61, 0x44, 0x62, 0x2f, 0x30, 0x52, 0x49, 0x35, 0x49, 0x61, 0x71,
		0x57, 0x6c, 0x4a, 0x75, 0x55, 0x4c, 0x45, 0x4d, 0x30, 0x73, 0x4b, 0x64,
		0x37, 0x59, 0x78, 0x6b, 0x75, 0x4a, 0x33, 0x32, 0x79, 0x72, 0x6a, 0x37,
		0x65, 0x48, 0x78, 0x50, 0x69, 0x36, 0x4d, 0x58, 0x79, 0x37, 0x6c, 0x6b,
		0x4b, 0x4d, 0x0a, 0x38, 0x37, 0x6c, 0x69, 0x48, 0x4e, 0x51, 0x68, 0x6f,
		0x31, 0x4d, 0x77, 0x55, 0x54, 0x41, 0x64, 0x42, 0x67, 0x4e, 0x56, 0x48,
		0x51, 0x34, 0x45, 0x46, 0x67, 0x51, 0x55, 0x5a, 0x4f, 0x4d, 0x44, 0x54,
		0x6d, 0x44, 0x43, 0x31, 0x6a, 0x76, 0x2f, 0x6a, 0x77, 0x45, 0x4f, 0x77,
		0x2b, 0x6a, 0x72, 0x78, 0x37, 0x71, 0x49, 0x56, 0x6d, 0x59, 0x77, 0x48,
		0x77, 0x59, 0x44, 0x56, 0x52, 0x30, 0x6a, 0x0a, 0x42, 0x42, 0x67, 0x77,
		0x46, 0x6f, 0x41, 0x55, 0x5a, 0x4f, 0x4d, 0x44, 0x54, 0x6d, 0x44, 0x43,
		0x31, 0x6a, 0x76, 0x2f, 0x6a, 0x77, 0x45, 0x4f, 0x77, 0x2b, 0x6a, 0x72,
		0x78, 0x37, 0x71, 0x49, 0x56, 0x6d, 0x59, 0x77, 0x44, 0x77, 0x59, 0x44,
		0x56, 0x52, 0x30, 0x54, 0x41, 0x51, 0x48, 0x2f, 0x42, 0x41, 0x55, 0x77,
		0x41, 0x77, 0x45, 0x42, 0x2f, 0x7a, 0x41, 0x4b, 0x42, 0x67, 0x67, 0x71,
		0x0a, 0x68, 0x6b, 0x6a, 0x4f, 0x50, 0x51, 0x51, 0x44, 0x41, 0x67, 0x4e,
		0x49, 0x41, 0x44, 0x42, 0x46, 0x41, 0x69, 0x42, 0x70, 0x30, 0x48, 0x64,
		0x51, 0x55, 0x47, 0x6f, 0x38, 0x53, 0x56, 0x74, 0x2b, 0x43, 0x57, 0x78,
		0x41, 0x38, 0x36, 0x50, 0x66, 0x4a, 0x77, 0x69, 0x38, 0x70, 0x69, 0x77,
		0x55, 0x71, 0x4d, 0x71, 0x37, 0x46, 0x48, 0x69, 0x33, 0x35, 0x69, 0x31,
		0x7a, 0x4d, 0x77, 0x49, 0x68, 0x0a, 0x41, 0x4a, 0x64, 0x41, 0x5a, 0x33,
		0x7a, 0x54, 0x64, 0x6a, 0x41, 0x2f, 0x6f, 0x67, 0x57, 0x33, 0x66, 0x6e,
		0x4c, 0x74, 0x71, 0x4a, 0x75, 0x4c, 0x41, 0x44, 0x4a, 0x68, 0x4c, 0x36,
		0x39, 0x37, 0x62, 0x46, 0x75, 0x6e, 0x46, 0x35, 0x42, 0x70, 0x71, 0x53,
		0x70, 0x63, 0x0a, 0x2d, 0x2d, 0x2d, 0x2d, 0x2d, 0x45, 0x4e, 0x44, 0x20,
		0x43, 0x45, 0x52, 0x54, 0x49, 0x46, 0x49, 0x43, 0x41, 0x54, 0x45, 0x2d,
		0x2d, 0x2d, 0x2d, 0x2d, 0x0a
	};

}
}
